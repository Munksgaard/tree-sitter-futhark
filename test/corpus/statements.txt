================================================================================
Type bindings
================================================================================

type foo = i64

type foo = []a

type foo 'a = []a

type foo 'a [n] = [n]a

type foo 'f = #a #b | #c #d #e f

--------------------------------------------------------------------------------

(source_file
  (dec
    (type_bind
      (identifier)
      (type
        (qualid
          (identifier)))))
  (dec
    (type_bind
      (identifier)
      (type
        (array_type
          (type
            (qualid
              (identifier)))))))
  (dec
    (type_bind
      (identifier)
      (type_param
        (identifier))
      (type
        (array_type
          (type
            (qualid
              (identifier)))))))
  (dec
    (type_bind
      (identifier)
      (type_param
        (identifier))
      (type_param
        (identifier))
      (type
        (array_type
          (dim
            (qualid
              (identifier)))
          (type
            (qualid
              (identifier)))))))
  (dec
    (type_bind
      (identifier)
      (type_param
        (identifier))
      (type
        (type_application
          (type
            (sum_type
              (constructor
                (identifier))))
          (type_arg
            (type
              (type_application
                (type
                  (sum_type
                    (constructor
                      (identifier))
                    (constructor
                      (identifier))))
                (type_arg
                  (type
                    (type_application
                      (type
                        (sum_type
                          (constructor
                            (identifier))))
                      (type_arg
                        (type
                          (type_application
                            (type
                              (sum_type
                                (constructor
                                  (identifier))))
                            (type_arg
                              (type
                                (qualid
                                  (identifier))))))))))))))))))

================================================================================
Val bindings
================================================================================

def foo () = 1i64

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier)
        (pat))
      (exp
        (atom
          (literal
            (int_type)))))))

================================================================================
Val bindings 2
================================================================================

def foo = 1i64

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier))
      (exp
        (atom
          (literal
            (int_type)))))))

================================================================================
Val bindings 3
================================================================================

def a + b = a

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind2
        (pat
          (identifier))
        (binop
          (opstartchar))
        (pat
          (identifier)))
      (exp
        (atom
          (qualid
            (identifier)))))))

================================================================================
Val bindings 4
================================================================================

def a - b = a

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind2
        (pat
          (identifier))
        (binop
          (opstartchar))
        (pat
          (identifier)))
      (exp
        (atom
          (qualid
            (identifier)))))))

================================================================================
Constructors 1
================================================================================

def foo = #bar a b c

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier))
      (exp
        (exp
          (exp
            (exp
              (constructor
                (identifier)))
            (exp
              (atom
                (qualid
                  (identifier)))))
          (exp
            (atom
              (qualid
                (identifier)))))
        (exp
          (atom
            (qualid
              (identifier))))))))

================================================================================
Type ascription
================================================================================

def foo = a b : i64

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier))
      (exp
        (exp
          (exp
            (atom
              (qualid
                (identifier))))
          (exp
            (atom
              (qualid
                (identifier)))))
        (type_op)
        (type
          (qualid
            (identifier)))))))

================================================================================
Type coercion
================================================================================

def foo = a b :> i64

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier))
      (exp
        (exp
          (exp
            (atom
              (qualid
                (identifier))))
          (exp
            (atom
              (qualid
                (identifier)))))
        (type_op)
        (type
          (qualid
            (identifier)))))))

================================================================================
Binop 1
================================================================================

def foo = a + b

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier))
      (exp
        (exp
          (atom
            (qualid
              (identifier))))
        (qualbinop
          (binop
            (opstartchar)))
        (exp
          (atom
            (qualid
              (identifier))))))))

================================================================================
Binop 2
================================================================================

def foo = a * b

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier))
      (exp
        (exp
          (atom
            (qualid
              (identifier))))
        (qualbinop
          (binop
            (opstartchar)))
        (exp
          (atom
            (qualid
              (identifier))))))))

================================================================================
Binop 3
================================================================================

def foo = a - b

--------------------------------------------------------------------------------

(source_file
  (dec
    (val_bind
      (val_bind1
        (identifier))
      (exp
        (exp
          (atom
            (qualid
              (identifier))))
        (qualbinop
          (binop
            (opstartchar)))
        (exp
          (atom
            (qualid
              (identifier))))))))
